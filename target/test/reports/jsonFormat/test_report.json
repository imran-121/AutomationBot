[
  {
    "line": 8,
    "elements": [
      {
        "start_timestamp": "2021-08-02T23:04:24.541Z",
        "line": 21,
        "name": "Validate health for users, post and comments end points",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-health-for-users--post-and-comments-end-points;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 882863000,
              "status": "passed"
            },
            "line": 15,
            "name": "User has a valid end point \"/users\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 27
                }
              ],
              "location": "steps_binder.CommentSteps.user_has_a_valid_end_point(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2148741000,
              "status": "passed"
            },
            "line": 16,
            "name": "User sends get request to given end point",
            "match": {
              "location": "steps_binder.CommentSteps.user_sends_get_request_to_given_end_point()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3991100,
              "status": "passed"
            },
            "line": 17,
            "name": "verify the status line and tontent type should be \"HTTP/1.1 200 OK\" and \"application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"HTTP/1.1 200 OK\"",
                  "offset": 50
                },
                {
                  "val": "\"application/json; charset\u003dutf-8\"",
                  "offset": 72
                }
              ],
              "location": "steps_binder.CommentSteps.verify_the_status_line_and_tontent_type_should_be_and(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@get"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@health"
          },
          {
            "name": "@automated"
          }
        ]
      },
      {
        "start_timestamp": "2021-08-02T23:04:27.637Z",
        "line": 22,
        "name": "Validate health for users, post and comments end points",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-health-for-users--post-and-comments-end-points;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "User has a valid end point \"/posts\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 27
                }
              ],
              "location": "steps_binder.CommentSteps.user_has_a_valid_end_point(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1111392700,
              "status": "passed"
            },
            "line": 16,
            "name": "User sends get request to given end point",
            "match": {
              "location": "steps_binder.CommentSteps.user_sends_get_request_to_given_end_point()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "verify the status line and tontent type should be \"HTTP/1.1 200 OK\" and \"application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"HTTP/1.1 200 OK\"",
                  "offset": 50
                },
                {
                  "val": "\"application/json; charset\u003dutf-8\"",
                  "offset": 72
                }
              ],
              "location": "steps_binder.CommentSteps.verify_the_status_line_and_tontent_type_should_be_and(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@get"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@health"
          },
          {
            "name": "@automated"
          }
        ]
      },
      {
        "start_timestamp": "2021-08-02T23:04:28.753Z",
        "line": 23,
        "name": "Validate health for users, post and comments end points",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-health-for-users--post-and-comments-end-points;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 15,
            "name": "User has a valid end point \"/comments\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments\"",
                  "offset": 27
                }
              ],
              "location": "steps_binder.CommentSteps.user_has_a_valid_end_point(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1444980000,
              "status": "passed"
            },
            "line": 16,
            "name": "User sends get request to given end point",
            "match": {
              "location": "steps_binder.CommentSteps.user_sends_get_request_to_given_end_point()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "status": "passed"
            },
            "line": 17,
            "name": "verify the status line and tontent type should be \"HTTP/1.1 200 OK\" and \"application/json; charset\u003dutf-8\"",
            "match": {
              "arguments": [
                {
                  "val": "\"HTTP/1.1 200 OK\"",
                  "offset": 50
                },
                {
                  "val": "\"application/json; charset\u003dutf-8\"",
                  "offset": 72
                }
              ],
              "location": "steps_binder.CommentSteps.verify_the_status_line_and_tontent_type_should_be_and(java.lang.String,java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@smoke"
          },
          {
            "name": "@get"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@health"
          },
          {
            "name": "@automated"
          }
        ]
      },
      {
        "start_timestamp": "2021-08-02T23:04:30.203Z",
        "line": 32,
        "name": "Validate the json schema for users, posts and comments end points",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-the-json-schema-for-users--posts-and-comments-end-points;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "User has a valid end point \"/users/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/users/1\"",
                  "offset": 27
                }
              ],
              "location": "steps_binder.CommentSteps.user_has_a_valid_end_point(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1089656000,
              "status": "passed"
            },
            "line": 28,
            "name": "User sends get request to given end point",
            "match": {
              "location": "steps_binder.CommentSteps.user_sends_get_request_to_given_end_point()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 337792300,
              "status": "passed"
            },
            "line": 29,
            "name": "verify json schema of given endpoint should be \"testData/json/users-endpoint-schema.json\"",
            "match": {
              "arguments": [
                {
                  "val": "\"testData/json/users-endpoint-schema.json\"",
                  "offset": 47
                }
              ],
              "location": "steps_binder.CommentSteps.verify_json_schema_of_given_endpoint_should_be(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@sanity"
          },
          {
            "name": "@get"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@schema"
          },
          {
            "name": "@automated"
          }
        ]
      },
      {
        "start_timestamp": "2021-08-02T23:04:31.636Z",
        "line": 33,
        "name": "Validate the json schema for users, posts and comments end points",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-the-json-schema-for-users--posts-and-comments-end-points;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "User has a valid end point \"/posts/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/1\"",
                  "offset": 27
                }
              ],
              "location": "steps_binder.CommentSteps.user_has_a_valid_end_point(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2107550100,
              "status": "passed"
            },
            "line": 28,
            "name": "User sends get request to given end point",
            "match": {
              "location": "steps_binder.CommentSteps.user_sends_get_request_to_given_end_point()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4953600,
              "status": "passed"
            },
            "line": 29,
            "name": "verify json schema of given endpoint should be \"testData/json/posts-endpoint-schema.json\"",
            "match": {
              "arguments": [
                {
                  "val": "\"testData/json/posts-endpoint-schema.json\"",
                  "offset": 47
                }
              ],
              "location": "steps_binder.CommentSteps.verify_json_schema_of_given_endpoint_should_be(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@sanity"
          },
          {
            "name": "@get"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@schema"
          },
          {
            "name": "@automated"
          }
        ]
      },
      {
        "start_timestamp": "2021-08-02T23:04:33.753Z",
        "line": 34,
        "name": "Validate the json schema for users, posts and comments end points",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-the-json-schema-for-users--posts-and-comments-end-points;;4",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 27,
            "name": "User has a valid end point \"/comments/1\"",
            "match": {
              "arguments": [
                {
                  "val": "\"/comments/1\"",
                  "offset": 27
                }
              ],
              "location": "steps_binder.CommentSteps.user_has_a_valid_end_point(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1139065100,
              "status": "passed"
            },
            "line": 28,
            "name": "User sends get request to given end point",
            "match": {
              "location": "steps_binder.CommentSteps.user_sends_get_request_to_given_end_point()"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4986300,
              "status": "passed"
            },
            "line": 29,
            "name": "verify json schema of given endpoint should be \"testData/json/comments-endpoint-schema.json\"",
            "match": {
              "arguments": [
                {
                  "val": "\"testData/json/comments-endpoint-schema.json\"",
                  "offset": 47
                }
              ],
              "location": "steps_binder.CommentSteps.verify_json_schema_of_given_endpoint_should_be(java.lang.String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@sanity"
          },
          {
            "name": "@get"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@schema"
          },
          {
            "name": "@automated"
          }
        ]
      },
      {
        "start_timestamp": "2021-08-02T23:04:34.902Z",
        "line": 46,
        "name": "Validate email formatting in comment section",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-email-formatting-in-comment-section;;2",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 39,
            "name": "With a valid user with user name \"Delphine\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Delphine\"",
                  "offset": 33
                }
              ],
              "location": "steps_binder.CommentSteps.we_have_a_valid_user_with_user_name(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1723861300,
              "status": "passed"
            },
            "line": 40,
            "name": "Filter and store user id using end point \"/users\" on the basis of user name",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 41
                }
              ],
              "location": "steps_binder.CommentSteps.filter_and_store_user_id_using_end_point_on_the_basis_of_user_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1172093200,
              "status": "passed"
            },
            "line": 41,
            "name": "Filter and store all of the post ids using end point \"/posts\" on the basis of user id",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 53
                }
              ],
              "location": "steps_binder.CommentSteps.filter_and_store_all_of_the_post_using_end_point_on_the_basis_of_user_id(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10956946400,
              "status": "passed"
            },
            "line": 42,
            "name": "Filter and store all of email values from comments using \"/posts/{post_id}/comments\" on the basis of post ids",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/{post_id}/comments\"",
                  "offset": 57
                }
              ],
              "location": "steps_binder.CommentSteps.filter_and_store_all_of_comments_using_on_the_basis_of_post_ids(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 997400,
              "status": "passed"
            },
            "line": 43,
            "name": "verify all of the email values should be in valid format",
            "match": {
              "location": "steps_binder.CommentSteps.verify_email_value_formatting_after_extracting_from_response()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@integartion"
          },
          {
            "name": "@end2end"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@automated"
          }
        ]
      },
      {
        "start_timestamp": "2021-08-02T23:04:48.760Z",
        "line": 47,
        "name": "Validate email formatting in comment section",
        "description": "",
        "id": "testing-commnet-module-functionality;validate-email-formatting-in-comment-section;;3",
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "line": 39,
            "name": "With a valid user with user name \"Kamren\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Kamren\"",
                  "offset": 33
                }
              ],
              "location": "steps_binder.CommentSteps.we_have_a_valid_user_with_user_name(java.lang.String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1105121600,
              "status": "passed"
            },
            "line": 40,
            "name": "Filter and store user id using end point \"/users\" on the basis of user name",
            "match": {
              "arguments": [
                {
                  "val": "\"/users\"",
                  "offset": 41
                }
              ],
              "location": "steps_binder.CommentSteps.filter_and_store_user_id_using_end_point_on_the_basis_of_user_name(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1096786600,
              "status": "passed"
            },
            "line": 41,
            "name": "Filter and store all of the post ids using end point \"/posts\" on the basis of user id",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts\"",
                  "offset": 53
                }
              ],
              "location": "steps_binder.CommentSteps.filter_and_store_all_of_the_post_using_end_point_on_the_basis_of_user_id(java.lang.String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11053702900,
              "status": "passed"
            },
            "line": 42,
            "name": "Filter and store all of email values from comments using \"/posts/{post_id}/comments\" on the basis of post ids",
            "match": {
              "arguments": [
                {
                  "val": "\"/posts/{post_id}/comments\"",
                  "offset": 57
                }
              ],
              "location": "steps_binder.CommentSteps.filter_and_store_all_of_comments_using_on_the_basis_of_post_ids(java.lang.String)"
            },
            "keyword": "When "
          },
          {
            "result": {
              "duration": 997500,
              "status": "passed"
            },
            "line": 43,
            "name": "verify all of the email values should be in valid format",
            "match": {
              "location": "steps_binder.CommentSteps.verify_email_value_formatting_after_extracting_from_response()"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@comment_module"
          },
          {
            "name": "@regression"
          },
          {
            "name": "@api"
          },
          {
            "name": "@integartion"
          },
          {
            "name": "@end2end"
          },
          {
            "name": "@positive"
          },
          {
            "name": "@automated"
          }
        ]
      }
    ],
    "name": "Testing commnet module functionality",
    "description": "\tAs a member of QA team\n  I want to test commnet module\n  So that I can assure quality on rest api layer",
    "id": "testing-commnet-module-functionality",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Features/comment.feature",
    "tags": [
      {
        "name": "@comment_module",
        "type": "Tag",
        "location": {
          "line": 7,
          "column": 1
        }
      },
      {
        "name": "@regression",
        "type": "Tag",
        "location": {
          "line": 7,
          "column": 17
        }
      }
    ]
  }
]